knitr::opts_chunk$set(echo = TRUE)
library("limma")
library("ggplot2")
nGenes <- 10000                   # number of "features"
nSamples <- 6                     # number of samples (split equal in 2 groups)
pDiff <- .1                       # percent of genes "differential"
grp <- rep(0:1,each=nSamples/2)   # dummy variable for exp. group
trueFC <- 2                       # log-fold-change of truly DE
d0 <- 1
s0 <- 0.8
sd <- s0*sqrt(d0/rchisq(nGenes,df=d0))  # dist'n of s.d.
grp
sd
y <- matrix(rnorm(nGenes*nSamples,sd=sd),
nr=nGenes,nc=nSamples)
y
indD <- 1:floor(pDiff*nGenes)
diff <- sample(c(-1,1),max(indD),replace=TRUE)*trueFC
y[indD,grp==1] <- y[indD,grp==1] + diff
y
# Calculating observed variances (pooled variance) for each feature
n1 <- n2 <- nSamples / 2  # Since we have equal samples in both groups
observed_variances <- numeric(nGenes)
for (i in 1:nGenes) {
s1_sq <- var(y[i, grp == 0])
s2_sq <- var(y[i, grp == 1])
sp_sq <- ((n1 - 1) * s1_sq + (n2 - 1) * s2_sq) / (n1 + n2 - 2)
observed_variances[i] <- sp_sq
}
# True variances are simply squared of sd values used to generate the data
true_variances <- sd^2
# Scatter plot of true vs observed variances
plot(log(true_variances), log(observed_variances), xlab="Log(True Variances)", ylab="Log(Observed Variances)", main="True vs Observed Variances")
abline(a=0, b=1, col="red")  # Diagonal reference line
# Calculating observed variances (pooled variance) for each feature
n1 <- n2 <- nSamples / 2  # Since we have equal samples in both groups
observed_variances <- numeric(nGenes)
for (i in 1:nGenes) {
s1_sq <- var(y[i, grp == 0])
s2_sq <- var(y[i, grp == 1])
sp_sq <- ((n1 - 1) * s1_sq + (n2 - 1) * s2_sq) / (n1 + n2 - 2)
observed_variances[i] <- sp_sq
}
# True variances are simply squared of sd values used to generate the data
true_variances <- sd^2
# Scatter plot of true vs observed variances
plot(log(true_variances), log(observed_variances),
xlab="Log(True Variances)",
ylab="Log(Observed Variances)",
main="True vs Observed Variances")
abline(a=0, b=1, col="red")
nrow(y)
ncol(y)
i = 1
s1_sq <- var(y[i, grp == 0])
s1_sq
y[i, grp == 0]
2_sq <- var(y[i, grp == 1])
s2_sq <- var(y[i, grp == 1])
# Calculating observed variances
n1 <- n2 <- nSamples / 2
observed_variances <- numeric(nGenes)
for (i in 1:nGenes) {
s1_sq <- var(y[i, grp == 0])
s2_sq <- var(y[i, grp == 1])
sp_sq <- ((n1 - 1) * s1_sq + (n2 - 1) * s2_sq) / (n1 + n2 - 2)
observed_variances[i] <- sp_sq
}
# Calculating true variances
true_variances <- sd^2
# Scatter plot of true vs observed variances
plot(log(true_variances), log(observed_variances), xlab="Log(True Variances)", ylab="Log(Observed Variances)", main="True vs Observed Variances")
abline(a=0, b=1, col="red")
(design <- model.matrix(~grp))
(design <- model.matrix(~grp))
# Select a subset of genes for visualization: some from differentially expressed and some not
set.seed(21)  # for reproducibility
random_non_diff_genes <- sample(setdiff(1:nGenes, indD), 50)  # 50 random non-differential genes
selected_genes <- c(indD[1:50], random_non_diff_genes)  # 50 differential + 50 non-differential
# Prepare data for ggplot
df <- as.data.frame(t(y[selected_genes, ]))
df$Group <- factor(grp)
# Create a boxplot for selected genes
library(reshape2)
install.packages("reshape2")
(design <- model.matrix(~grp))
# Select a subset of genes for visualization: some from differentially expressed and some not
set.seed(21)  # for reproducibility
random_non_diff_genes <- sample(setdiff(1:nGenes, indD), 50)  # 50 random non-differential genes
selected_genes <- c(indD[1:50], random_non_diff_genes)  # 50 differential + 50 non-differential
# Prepare data for ggplot
df <- as.data.frame(t(y[selected_genes, ]))
df$Group <- factor(grp)
# Create a boxplot for selected genes
library(reshape2)
df_melted <- melt(df, id.vars="Group")
ggplot(df_melted, aes(x=Group, y=value, fill=Group)) +
geom_boxplot() +
facet_wrap(~variable, scales="free_y", ncol=10) +
theme_light() +
labs(title="Expression levels of selected genes by group",
x="Experimental Group",
y="Expression Level") +
theme(legend.position="none")
(design <- model.matrix(~grp))
# Select a subset of genes for visualization: some from differentially expressed and some not
set.seed(21)  # for reproducibility
random_non_diff_genes <- sample(setdiff(1:nGenes, indD), 50)  # 50 random non-differential genes
selected_genes <- c(indD[1:50], random_non_diff_genes)  # 50 differential + 50 non-differential
# Prepare data for ggplot
df <- as.data.frame(t(y[selected_genes, ]))
df$Group <- factor(grp)
# Create a boxplot for selected genes
library(reshape2)
df_melted <- melt(df, id.vars="Group")
ggplot(df_melted, aes(x=Group, y=value, fill=Group)) +
geom_boxplot() +
facet_wrap(~variable, scales="free_y", ncol=10) +
theme_light() +
labs(title="Expression levels of selected genes by group",
x="Experimental Group",
y="Expression Level") +
theme(legend.position="none")
design
# Compute the mean expression difference between the two groups for each gene
mean_diff <- rowMeans(y[, grp == 1]) - rowMeans(y[, grp == 0])
# Sort genes by the absolute value of their mean difference
sorted_genes <- order(abs(mean_diff), decreasing=TRUE)
# Select top 50 genes with the largest absolute mean differences and 50 with the smallest
selected_genes <- c(sorted_genes[1:50], sorted_genes[(nGenes-49):nGenes])
# Prepare data for ggplot
df <- as.data.frame(t(y[selected_genes, ]))
df$Group <- factor(grp)
# Create a boxplot for selected genes
df_melted <- melt(df, id.vars="Group")
ggplot(df_melted, aes(x=Group, y=value, fill=Group)) +
geom_boxplot() +
facet_wrap(~variable, scales="free_y", ncol=10) +
theme_light() +
labs(title="Expression levels of selected genes by group",
x="Experimental Group",
y="Expression Level") +
theme(legend.position="none")
(design <- model.matrix(~grp))
# Select a subset of genes for visualization: some from differentially expressed and some not
set.seed(21)  # for reproducibility
random_non_diff_genes <- sample(setdiff(1:nGenes, indD), 10)  # 10 random non-differential genes
selected_genes <- c(indD[1:10], random_non_diff_genes)  # 10 differential + 10 non-differential
# Prepare data for ggplot
df <- as.data.frame(t(y[selected_genes, ]))
df$Group <- factor(grp)
# Create a boxplot for selected genes
library(reshape2)
df_melted <- melt(df, id.vars="Group")
ggplot(df_melted, aes(x=Group, y=value, fill=Group)) +
geom_boxplot() +
facet_wrap(~variable, scales="free_y", ncol=5) +  # Adjusted to 5 columns for better viewing
theme_light() +
labs(title="Expression levels of selected genes by group",
x="Experimental Group",
y="Expression Level") +
theme(legend.position="none")
indD
diff
random_non_diff_genes
